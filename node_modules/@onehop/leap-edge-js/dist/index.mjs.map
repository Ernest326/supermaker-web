{"version":3,"sources":["../src/messages/errors.ts","../src/client.ts"],"sourcesContent":["export interface ILeapError {\n\tdescription: string;\n\treconnect?: boolean;\n}\n\nexport enum LeapError {\n\tUNKNOWN = 4000,\n\tINVALID_AUTH,\n\tIDENTIFY_TIMEOUT,\n\tNOT_AUTHENTICATED,\n\tUNKNOWN_OPCODE,\n\tINVALID_PAYLOAD,\n\tBAD_ROUTE,\n\tOUT_OF_SYNC,\n}\n\nexport const unknownError: ILeapError = {\n\tdescription: 'Unknown error',\n\treconnect: true,\n};\n\nexport const errorMap: Partial<Record<LeapError, ILeapError>> = {\n\t[LeapError.INVALID_AUTH]: {\n\t\tdescription: 'Invalid auth',\n\t\treconnect: false,\n\t},\n\t[LeapError.IDENTIFY_TIMEOUT]: {\n\t\tdescription: 'Identify timeout',\n\t\treconnect: true,\n\t},\n\t[LeapError.NOT_AUTHENTICATED]: {\n\t\tdescription: 'Not authenticated',\n\t\treconnect: true,\n\t},\n\t[LeapError.UNKNOWN_OPCODE]: {\n\t\tdescription: 'Invalid opcode',\n\t\treconnect: true,\n\t},\n\t[LeapError.INVALID_PAYLOAD]: {\n\t\tdescription: \"Invalid payload (doesn't match expected data field)\",\n\t\treconnect: true,\n\t},\n\t[LeapError.BAD_ROUTE]: {\n\t\tdescription: 'Bad route',\n\t\treconnect: true,\n\t},\n};\n","import {Dispatch, Heartbeat, Hello} from './messages/control';\nimport {\n\tEncapsulatingPayload,\n\tEncapsulatingServicePayload,\n\tLeapServiceEvent,\n} from './messages/payload';\nimport {OpCode, PayloadType} from './messages/opcodes';\nimport {errorMap, unknownError, LeapError} from './messages/errors';\nimport {EventEmitter} from 'eventemitter3';\nimport type {MessageEvent, CloseEvent, default as WSWebSocket} from 'ws';\n\nexport const DEFAULT_ENDPOINT = 'wss://leap.hop.io/ws';\n\nexport interface LeapEdgeAuthenticationParameters {\n\ttoken?: string | null;\n\tprojectId: string;\n}\n\nexport interface LeapEdgeInitOptions {\n\tsocketUrl: string;\n\tdebug: boolean;\n}\n\nexport enum LeapConnectionState {\n\tIDLE = 'idle',\n\tCONNECTING = 'connecting',\n\tAUTHENTICATING = 'authenticating',\n\tCONNECTED = 'connected',\n\tERRORED = 'errored',\n}\n\nconst WebSocket: {new (url: string): WSWebSocket} =\n\ttypeof window === 'undefined' ? require('ws') : window.WebSocket;\n\nexport declare interface LeapEdgeClient {\n\ton(\n\t\tevent: 'connectionStateUpdate',\n\t\tlistener: (state: LeapConnectionState) => void,\n\t): this;\n\n\ton(event: 'serviceEvent', listener: (state: LeapServiceEvent) => void): this;\n}\n\nexport class LeapEdgeClient extends EventEmitter {\n\tpublic auth: LeapEdgeAuthenticationParameters;\n\tprivate socket: WSWebSocket | null;\n\tprivate heartbeat: ReturnType<typeof setTimeout> | null;\n\tprivate heartbeatInterval: number | null;\n\tprivate lastServerHeartbeatAck: number | null;\n\tprivate connectionState: LeapConnectionState;\n\tprivate options: LeapEdgeInitOptions;\n\n\tconstructor(\n\t\tauth: LeapEdgeAuthenticationParameters,\n\t\topts?: Partial<LeapEdgeInitOptions>,\n\t) {\n\t\tsuper();\n\t\tthis.options = {debug: false, socketUrl: DEFAULT_ENDPOINT, ...opts};\n\t\tthis.auth = auth;\n\t\tthis.socket = null;\n\t\tthis.heartbeat = null;\n\t\tthis.heartbeatInterval = null;\n\t\tthis.lastServerHeartbeatAck = null;\n\t\tthis.connectionState = LeapConnectionState.IDLE;\n\t}\n\n\t/**\n\t * Connect to Leap Edge\n\t */\n\tpublic connect = () => {\n\t\tif (this.socket) {\n\t\t\tconsole.warn(\n\t\t\t\t'[Leap Edge] LeapEdgeClient#connect was called during active connection. This is a noop.',\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._updateObservedConnectionState(LeapConnectionState.CONNECTING);\n\t\tthis.socket = new WebSocket(this.options.socketUrl);\n\n\t\tif (!this.socket) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.socket.addEventListener('message', this._handleSocketMessage);\n\t\tthis.socket.addEventListener('close', this._handleSocketClose);\n\t\tthis.socket.addEventListener('error', this._handleSocketError);\n\t};\n\n\tpublic sendServicePayload = (payload: EncapsulatingServicePayload) => {\n\t\tif (\n\t\t\t!this.socket ||\n\t\t\tthis.connectionState !== LeapConnectionState.CONNECTED\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t'Attempted to send payload when socket connection was not established or authorized',\n\t\t\t);\n\t\t}\n\n\t\tthis.sendPayload(0, payload);\n\t};\n\n\tprivate sendPayload = (op: number, d: any = null): void => {\n\t\tvoid this.encodeSend(d ? {op, d} : {op});\n\t};\n\n\tprivate encodeSend = (d: unknown) => {\n\t\tif (!this.socket || !this.socket.OPEN) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.options.debug) console.log('send:', d);\n\t\tthis.socket.send(JSON.stringify(d));\n\t};\n\n\tprivate _resetState = () => {\n\t\tif (this.heartbeat) {\n\t\t\tclearInterval(this.heartbeat);\n\t\t}\n\n\t\tthis.socket = null;\n\t\tthis.heartbeat = null;\n\t};\n\n\tprivate _handleSocketError = () => {\n\t\tthis._updateObservedConnectionState(LeapConnectionState.ERRORED);\n\n\t\tif (this.heartbeat) {\n\t\t\tclearInterval(this.heartbeat);\n\t\t}\n\n\t\tthis.socket = null;\n\t\tthis.heartbeat = null;\n\n\t\tthis.connect();\n\t};\n\n\tprivate _handleSocketClose = (e: CloseEvent) => {\n\t\tthis._updateObservedConnectionState(LeapConnectionState.ERRORED);\n\n\t\tthis._resetState();\n\n\t\tconst errorCode = e.code as LeapError;\n\t\tconst error = errorMap[errorCode] || unknownError;\n\n\t\tconsole.warn('[Leap Edge] Client disconnected unexpectedly:', error);\n\n\t\tswitch (errorCode) {\n\t\t\tcase LeapError.BAD_ROUTE: {\n\t\t\t\tthis.options.socketUrl = e.reason;\n\t\t\t\tthis.connect();\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tdefault: {\n\t\t\t\tif (error.reconnect) {\n\t\t\t\t\tthis.connect();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate _handleSocketMessage = (m: MessageEvent) => {\n\t\tconst data = JSON.parse(m.data.toString()) as EncapsulatingPayload;\n\n\t\tif (data.op == null) {\n\t\t\tconsole.warn('leap edge received badly formatted payload:', data);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.options.debug) console.log('recv:', data);\n\n\t\tthis._handleOpcode(data.op, data.d);\n\t};\n\n\tprivate _handleOpcode = <T extends keyof PayloadType>(\n\t\topcode: T,\n\t\tdata: PayloadType[T],\n\t) => {\n\t\tswitch (opcode) {\n\t\t\tcase OpCode.DISPATCH: {\n\t\t\t\tconst d = <Dispatch>data;\n\n\t\t\t\tif (d.e === 'INIT') {\n\t\t\t\t\tthis._updateObservedConnectionState(LeapConnectionState.CONNECTED);\n\t\t\t\t}\n\n\t\t\t\tthis.emit('serviceEvent', {\n\t\t\t\t\tchannelId: d.c,\n\t\t\t\t\teventType: d.e,\n\t\t\t\t\tdata: d.d,\n\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OpCode.HELLO: {\n\t\t\t\tthis._updateObservedConnectionState(LeapConnectionState.AUTHENTICATING);\n\t\t\t\tthis._setupHeartbeat((<Hello>data).heartbeat_interval);\n\t\t\t\tthis._identify();\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OpCode.HEARTBEAT: {\n\t\t\t\tthis.sendPayload(OpCode.HEARTBEAT, {tag: (<Heartbeat>data).tag});\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase OpCode.HEARTBEAT_ACK: {\n\t\t\t\tthis.lastServerHeartbeatAck = Date.now();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate _identify = () => {\n\t\tthis.sendPayload(OpCode.IDENTIFY, {\n\t\t\tproject_id: this.auth.projectId,\n\t\t\ttoken: this.auth.token,\n\t\t});\n\t};\n\n\tprivate _setupHeartbeat = (int: number) => {\n\t\tthis.heartbeatInterval = int;\n\t\tthis.heartbeat = setInterval(() => {\n\t\t\tthis._sendHeartbeat();\n\t\t}, int);\n\t};\n\n\tprivate _sendHeartbeat = (optimisticResolution?: boolean) => {\n\t\tthis.sendPayload(OpCode.HEARTBEAT);\n\n\t\tconst sendTs = Date.now();\n\t\tsetTimeout(\n\t\t\t() => this._validateHeartbeatAck(sendTs, optimisticResolution),\n\t\t\toptimisticResolution ? 750 : 5000,\n\t\t);\n\t};\n\n\tprivate _validateHeartbeatAck = (hbtSendTs: number, or?: boolean) => {\n\t\tconst diff =\n\t\t\tthis.lastServerHeartbeatAck && this.lastServerHeartbeatAck - hbtSendTs;\n\t\tif (diff && diff >= 0 && diff < 5000) return;\n\n\t\tif (or) {\n\t\t\tconsole.log(\n\t\t\t\t'[Leap Edge] Optimistic resolution failed. Hard reconnecting...',\n\t\t\t);\n\t\t\tthis.socket?.close();\n\t\t\tthis._updateObservedConnectionState(LeapConnectionState.ERRORED);\n\t\t\tthis._resetState();\n\t\t\tthis.connect();\n\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.warn(\n\t\t\t\"[Leap Edge] Leap didn't respond to heartbeat in time. Attempting optimistic heartbeat resolution\",\n\t\t);\n\n\t\tthis._sendHeartbeat(true);\n\t};\n\n\tprivate _updateObservedConnectionState = (state: LeapConnectionState) => {\n\t\tthis.connectionState = state;\n\t\tthis.emit('connectionStateUpdate', state);\n\t};\n}\n"],"mappings":"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","names":[]}