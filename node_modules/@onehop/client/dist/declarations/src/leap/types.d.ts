import { API } from '@onehop/js';
import { Payload as PIPE_ROOM_AVAILABLE_PAYLOAD } from './handlers/PIPE_ROOM_AVAILABLE';
export declare type ClientInitOptions = {
    leapSocketUrl?: string;
};
export declare type LeapChannelSubscriptionError = 'NOT_GRANTED' | 'UNKNOWN';
export declare type GenericSubscriptionState = 'available' | 'pending' | 'unavailable' | 'non_existent';
export declare type ChannelStateData<T extends API.Channels.State> = {
    state: T | null;
    subscription: GenericSubscriptionState;
    error: UnavailableError | null;
};
export declare type RoomStateData = {
    subscription: 'pending';
    room: null;
} | {
    subscription: 'unavailable';
    room: null;
    error: UnavailableError;
} | {
    subscription: 'available';
    room: API.Pipe.Room;
    connection: PIPE_ROOM_AVAILABLE_PAYLOAD['connection'];
};
export declare type UnavailableError = {
    graceful: boolean;
    error_code?: LeapChannelSubscriptionError;
};
