import { z } from 'zod';
import { e as IdPrefixes } from '../../types-d4dfa8cd.js';

/**
 * Generate a Zod schema for an ID prefix
 * @param prefix Prefix of the ID
 * @returns A Zod schema that resolve to a valid ID
 *
 * @example
 * ```ts
 * const patSchema = hopId('pat');
 * const pat = patSchema.parse(possiblyAPat);
 *
 * // `pat` is now a valid token typed as `Id<'pat'>`
 * pat; // => pat_NTIzNzY2NjU2NjU1ODkyNDk
 * ```
 */
declare function hopId<Prefix extends IdPrefixes>(prefix: Prefix): z.ZodEffects<z.ZodString, `${Prefix}_${string}`, `${Prefix}_${string}`>;

export { hopId };
