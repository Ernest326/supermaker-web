{"version":3,"sources":["../../../src/utils/zod/ids.ts"],"names":[],"mappings":";;;;;;AAAA,SAAQ,SAAQ;AAiBT,SAAS,MAAiC,QAAgB;AAChE,SAAO,EACL,OAAO,EACP;AAAA,IACA,CAAC,UAA+B,WAAW,OAAO,MAAM;AAAA,IACxD,sBAAsB;AAAA,EACvB;AACF","sourcesContent":["import {z} from 'zod';\nimport {Id, IdPrefixes, validateId} from '../../rest/index.js';\n\n/**\n * Generate a Zod schema for an ID prefix\n * @param prefix Prefix of the ID\n * @returns A Zod schema that resolve to a valid ID\n *\n * @example\n * ```ts\n * const patSchema = hopId('pat');\n * const pat = patSchema.parse(possiblyAPat);\n *\n * // `pat` is now a valid token typed as `Id<'pat'>`\n * pat; // => pat_NTIzNzY2NjU2NjU1ODkyNDk\n * ```\n */\nexport function hopId<Prefix extends IdPrefixes>(prefix: Prefix) {\n\treturn z\n\t\t.string()\n\t\t.refine(\n\t\t\t(value): value is Id<Prefix> => validateId(value, prefix),\n\t\t\t`Id must be a valid ${prefix} id`,\n\t\t);\n}\n"]}